//
//  main.cpp
//  2.1
//
//  Created by doog on 2017/5/25.
//
//

#include <iostream>

int main()
{
    int i = 3.5;
    std::cout << "i: " << i << std::endl;
//  原码 00000000 00000000 00000000 00000011
    
    // 把有符号数赋值给无符号 ？？？
    unsigned int u = 10;
//  在计算机系统中，数值一律用补码来表示和存储。
//  正整数的补码是其二进制表示，与原码相同。
//  负数的补码是在其原码的基础上, 符号位不变, 其余各位取反, 最后+1. (反码+1)
//  原码 10000000 00000000 00000000 00101010
//  反码 11111111 11111111 11111111 11010101
//  补码 11111111 11111111 11111111 11010110
    i = -42;
    
//    i = -42 u = +10
    
//    i + i = -84
//    00000000 00000000 00000000 00000011
//    +
//    11111111 11111111 11111111 11010110
//    =
//    11111111 11111111 11111111 11011001 => 补码
//    10000000 00000000 00000000 00100110 => 反码
//    10000000 00000000 00000000 00100111 => 补码
    std::cout << "i + i = " << i + i << std::endl;
//    u + i = 4294967264
    std::cout << "u + i = " << u + i << std::endl;
//    i + u = 4294967264
    std::cout << "i + u = " << i + u << std::endl;
    
    unsigned k = i;
    std::cout << "k = " << k << std::endl;
    
    unsigned k1 = 1;
    int k2 = 2;
    std::cout << "k1 + k2 = " << k1 + k2 << std::endl;
    
    // 无符号的减法
    unsigned u1 = 42, u2 = 10;
    std::cout << u1 - u2 << std::endl;
//    1000 0000 0000 0000 0000 0000 0010 0000
//    0111 1111 1111 1111 1111 1111 1101 1111
//    0111 1111 1111 1111 1111 1111 1110 0000
    std::cout << u2 - u1 << std::endl;
    unsigned u3 = -32;
    std::cout << " (-32: " << u3 << ")" << std::endl;

}
